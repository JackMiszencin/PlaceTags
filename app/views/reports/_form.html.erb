<%= nested_form_for [:atlas, @report] do |f| %>
	<%= hidden_field_tag "old_tag_marker", true %>
	<div class = "control-group">
			<%= f.text_field :event_name, :required => true %>
	</div>
	<div class = "control-group" id="old_tag_input">
		<div class = "controls">
			<%= f.select :tag_id, @tags.map{|t| [t.title, t.id]}, :required => true %>
			<%= hidden_field_tag "report_atlas_id", @atlas.id, :name => "report[atlas_id]" %>
			<div class = "box-button" id = "new_tag">Assign To New Tag</div>
			<br><br><br>
		</div>
	</div>
	<div id = "new_tag_form">
	<script type="text/javascript">
		var radiusDefault = Number($("#report_tag_radius").val());
		function initialize() {
			var radiusDegrees = Number($("#hidden_realm_radius").val());
			var realmLat = Number($("#hidden_realm_lat").val());
			var realmLng = Number($("#hidden_realm_lng").val());
			var NE = new google.maps.LatLng((realmLat + radiusDegrees), (realmLng + radiusDegrees));
			var SW = new google.maps.LatLng((realmLat - radiusDegrees), (realmLng - radiusDegrees));
			var mapScope = new google.maps.LatLngBounds(SW, NE);
		  var mapOptions = {
		    center: new google.maps.LatLng(-34.397, 150.644),
		    zoom: 8,
		    mapTypeId: google.maps.MapTypeId.HYBRID
		  };
		  var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
			function addMarker(event){
				markerPoint = event.latLng
				marker = new google.maps.Marker({
					map:map,
					draggable:true,
					position:markerPoint,
					animation: null
				});
				function addCircle(){
					radiusDefault = Number($("#report_tag_radius").val());
					markerCircle = new google.maps.Circle({
						map:map,
						center:markerPoint,
						radius:radiusDefault,
						fillColor:"#EEEEEE",
						fillOpacity:0.5,
						strokeColor:"#EEEEEE",
						strokeOpacity:1.0
					});
					$("#report_tag_type_id").on('click', function(){
						var typeId = String($("#report_tag_type_id").val());
						typeId = "#" + typeId;
						markerCircle.setRadius(Number($(typeId).val()))
					});
				};
				google.maps.event.addListenerOnce(map, 'click', addCircle);
				google.maps.event.trigger(map, 'click')
				function recenterCircle(){
					var newLatLng = marker.getPosition();
					markerCircle.setCenter(newLatLng);
					$("#report_tag_lat").val(newLatLng.lat());
					$("#report_tag_lng").val(newLatLng.lng());				
				};
				google.maps.event.addListener(marker, 'drag', recenterCircle)
				var lat = markerPoint.lat();
				var lng = markerPoint.lng();
				$('#report_tag_lat').val(lat);
				$('#report_tag_lng').val(lng);
				$("#submit_report").attr("type", "submit");
				$("#report_tag_radius").on("click", function(){
					newRadius = Number($(this).val());
					markerCircle.setRadius(newRadius);
				});
				$("#report_tag_radius").on("keyup", function(){
					rFeed = String($(this).val());
					newRadius = Number(rFeed);
					markerCircle.setRadius(newRadius);
				});
			};
			google.maps.event.addListenerOnce(map, 'click', addMarker);
			$("#report_tag_type_id").on('click', function(){
				var typeId = String($("#report_tag_type_id").val());
				typeId = "#" + typeId;
				radiusDefault = Number($(typeId).val());
				$("#report_tag_radius").val(radiusDefault);
			});
			map.fitBounds(mapScope);
		};
		var newTagButton = document.getElementById("new_tag");
		google.maps.event.addDomListenerOnce(newTagButton, 'click', initialize);
	</script>

	<div id = "center-pane">
		<div id = "map-holder">
			<div id = "map-canvas"></div>
		</div>
	</div>
	<div id="right-pane">
			<h3>New Tag</h3>
			<%= f.fields_for @report.tag do |tag| %>
				<%= tag.text_field :title, :name => 'report[tag_attributes][title]', :required => true %>
				<%= tag.hidden_field :atlas_id, :name => 'report[tag_attributes][atlas_id]', :value => @atlas.id.to_s %>
				<%= tag.hidden_field :lat, :name => 'report[tag_attributes][lat]' %>
				<%= tag.hidden_field :lng, :name => 'report[tag_attributes][lng]' %>
				<%= hidden_field_tag "hidden_realm_lat", @realm.lat %>
				<%= hidden_field_tag "hidden_realm_lng", @realm.lng %>
				<%= hidden_field_tag "hidden_realm_radius", (@realm.radius * @realm.deg_per_met) %>			

				<div class = "control-group" id = "old-type-form">
					<%= tag.select :type_id, @types.map{|t| [t.label, t.id]}, :required => true %>
					<div class = "box-button", id = "new-type-button" >Create a new type</div>
					<br>
					<br>
				</div>
				<div class = "control-group" id = "new-type-form">
					<label>New Type</label>
					<%= tag.fields_for @report.tag.type do |type| %>
						<%= type.text_field :label, :name => 'report[tag_attributes][type_attributes][label]', :required => true %>
						<%= type.hidden_field :atlas_id, :name => 'report[tag_attributes][type_attributes][atlas_id]', :value => @atlas.id.to_s %>		
						<div class = "box-button", id = "old-type-button">Use old type</div>
						<br>
						<br>
					<% end %>
				</div>
				<%= tag.number_field :radius, :in => 0 ... 1000000, :step => 0.5, :value => 0, :name => "report[tag_attributes][radius]", :required => true %>
			<% end %>
			<br>
			<br>
			<div class = "box-button", id = "old_tag">Use existing tag</div>
	</div>
	<div>
		<% @types.each do |t| %>
		  <%= hidden_field_tag t.id, t.average_radius %>
		<% end %>
	</div>	
	</div>
	<%= submit_tag "Create Report", :id => "submit_report", :click => "checkLngLatFields" %>
<% end %>